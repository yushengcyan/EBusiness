<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:comtext="http://www.springframework.org/schema/context"
       xmlns:contex="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--配置整合myatis-->
    <!--1:配置数据库相关properties属性-->
    <comtext:property-placeholder location="classpath:jdbc.properties" />

    <!--2:配置数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--配置连接属性-->
        <property name="driverClass" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}"/>

        <!--连接池属性-->
        <!--最大连接数-->
        <property name="maxPoolSize" value="50"/>
        <property name="minPoolSize" value="10"/>
        <!--关闭连接后自动commit-->
        <property name="autoCommitOnClose" value="true" />
        <!--连接失败时自动重连次数-->
        <property name="acquireRetryAttempts" value="3"/>
        <!--获取连接超时时间-->
        <property name="checkoutTimeout" value="200000000" />
    </bean>
    <!--3:配置sqlSessionFactory 对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--扫描实体类包 使用别名-->
        <property name="typeAliasesPackage" value="com.EBusiness.dao.bo" />
        <!--扫描sql配置文件,即mapper.xml-->
        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml" />
        <!--配置分页插件-->
        <!--<property name="plugins">-->
            <!--<array>-->
                <!--<bean class="com.github.pagehelper.PageInterceptor">-->
                    <!--&lt;!&ndash;<property name="properties">&ndash;&gt;-->
                        <!--&lt;!&ndash;<value>&ndash;&gt;-->
                            <!--&lt;!&ndash;dialect = mysql&ndash;&gt;-->
                        <!--&lt;!&ndash;reasonable=true&ndash;&gt;-->
                        <!--&lt;!&ndash;</value>&ndash;&gt;-->
                    <!--&lt;!&ndash;</property>&ndash;&gt;-->
                <!--</bean>-->
            <!--</array>-->
        <!--</property>-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>

    </bean>

    <!--4:配置扫描Dao接口包 将Dao接口注入到Spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--扫描Dao包接口位置-->
        <property name="basePackage" value="com.EBusiness.dao.interfaces"/>
    </bean>


    <!--扫描service下的注解-->
    <!--开启注解识别-->
    <comtext:annotation-config/>
    <contex:component-scan base-package="com.EBusiness.services"/>

    <!--配置事务管理器-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 配置基于注解的事务形式-->
    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>